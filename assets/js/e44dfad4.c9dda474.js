"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[751],{7250:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"pay-to/create-agreement","title":"Create Agreement","description":"Create a PayTo Agreement","source":"@site/docs/pay-to/create-agreement.md","sourceDirName":"pay-to","slug":"/pay-to/create-agreement","permalink":"/docs/pay-to/create-agreement","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"create-agreement","title":"Create Agreement","sidebar_label":"Create PayTo Agreement","description":"Create a PayTo Agreement","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"PayTo Overview","permalink":"/docs/pay-to/payto-overview"},"next":{"title":"Get Agreement Status","permalink":"/docs/pay-to/get-agreement-status"}}');var r=t(4848),a=t(8453);const d={id:"create-agreement",title:"Create Agreement",sidebar_label:"Create PayTo Agreement",description:"Create a PayTo Agreement",sidebar_position:2},s="Create Agreement",l={},o=[{value:"Request Headers",id:"request-headers",level:2},{value:"Request Body",id:"request-body",level:2},{value:"Some detailed fields explanation:",id:"some-detailed-fields-explanation",level:3},{value:"1. debtor: account_identifier type",id:"1-debtor-account_identifier-type",level:4},{value:"2. payment_terms: frequency",id:"2-payment_terms-frequency",level:4},{value:"Example Request",id:"example-request",level:3},{value:"Successful Response",id:"successful-response",level:2},{value:"Agreement Status Lifecycle",id:"agreement-status-lifecycle",level:2},{value:"Webhook Events",id:"webhook-events",level:2},{value:"Try It",id:"try-it",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"create-agreement",children:"Create Agreement"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"POST"})," ",(0,r.jsx)(n.code,{children:"/payto/agreements"})]}),"\n",(0,r.jsx)(n.p,{children:"Create a new PayTo agreement for initiating recurring or one-time payments between a debtor and a creditor."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"request-headers",children:"Request Headers"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-http",children:"Authorization: Bearer <access_token>\nContent-Type: application/json\nAccept: application/json\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"request-body",children:"Request Body"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uid"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:["The supplied unique identifier for the Agreement. ",(0,r.jsx)("br",{}),"This identifier ensures agreement uniqueness between integrator systems and Oligo."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"purpose"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:["Select from 12 purposes to define the nature of the PayTo Agreement with your customer: ",(0,r.jsx)("br",{})," ",(0,r.jsx)("li",{children:" mortgage, utility, loan, dependant_support, gambling, retail, salary, personal, government, pension, tax, other "})," ",(0,r.jsx)("br",{})," The purpose should reflect the reason the PayTo agreement is being proposed."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"description"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"A short description for the agreement."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"debtor"})}),(0,r.jsx)(n.td,{children:"object"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"The party from whom the payment is taken."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"payment_terms"})}),(0,r.jsx)(n.td,{children:"object"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Specifies the type, frequency, and amount of the agreement."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"resolution_requested_before"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Requested resolution (accept/decline) deadline for this agreement. It will be provided in any notification sent to the debtor. Value must be an ISO8601 date-time in UTC timezone. This time is for informational purposes only and does not affect the expiry time which occurs after 5 days of inaction by the debtor."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"validity_start_date"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Start date for the validity of the agreement. If specified, the agreement will be valid from 00:00:00 Australia Sydney time on the specified date. If no date is specified, the current date will be populated."})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"some-detailed-fields-explanation",children:"Some detailed fields explanation:"}),"\n",(0,r.jsx)(n.h4,{id:"1-debtor-account_identifier-type",children:"1. debtor: account_identifier type"}),"\n",(0,r.jsx)(n.p,{children:"Select from 5 account identifier types:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"bban (BSB and account number)"}),"\n",(0,r.jsx)(n.li,{children:"alias_email (Email PayID)"}),"\n",(0,r.jsx)(n.li,{children:"alias_phone (Phone PayID)"}),"\n",(0,r.jsx)(n.li,{children:"alias_abn (ABN PayID)"}),"\n",(0,r.jsx)(n.li,{children:"alias_organisation_identifier (Org. ID PayID)"}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{title:"Take care",type:"danger",children:(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"There is a limit of 6 agreement creation attempts within 24 hours per debtor account."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["You have to call the ",(0,r.jsx)(n.a,{href:"/docs/pay-to/alias-resolution",children:"Alias Resolution"})," endpoint to validate the name associated with a PayID before using the alias in the account_identifier. You don't need to call it if you use bban (BSB and account number) as the debtor.account_identifier.type."]}),"\n"]}),"\n"]})}),"\n",(0,r.jsx)(n.h4,{id:"2-payment_terms-frequency",children:"2. payment_terms: frequency"}),"\n",(0,r.jsx)(n.p,{children:"The frequency at which payments will be made. Frequency can be used in conjunction with \u2018count\u2019 to allow more than one payment per period."}),"\n",(0,r.jsx)(n.p,{children:"The frequency must be one of the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"adhoc: A payment on request or as necessary."}),"\n",(0,r.jsx)(n.li,{children:"daily: A payment daily. Valid until 23:59:59.999 Australia Sydney time the same day."}),"\n",(0,r.jsx)(n.li,{children:"weekly: A payment once per week. Valid until 23:59:59.999 Australia Sydney time on the 7th day."}),"\n",(0,r.jsx)(n.li,{children:"fortnightly: A payment every 2 weeks. Valid until 23:59:59.999 Australia Sydney time on the 14th day."}),"\n",(0,r.jsxs)(n.li,{children:["monthly: A payment once per month. Valid for the month, up until 23:59:59.999 Australia Sydney time the day before the day noted in the ",(0,r.jsx)(n.code,{children:"validity_start_date"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["quarterly: A payment every 3 months. Valid for 3 months, up until 23:59:59.999 Australia Sydney time the day before the day noted in the ",(0,r.jsx)(n.code,{children:"validity_start_date"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["semi_annual: A payment twice per year. Valid for 6 months, up until 23:59:59.999 Australia Sydney time the day before the day noted in the ",(0,r.jsx)(n.code,{children:"validity_start_date"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["annual: A payment once per year. Valid for 12 months, up until 23:59:59.999 Australia Sydney time the day before the day noted in the ",(0,r.jsx)(n.code,{children:"validity_start_date"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"NOTE: For periods starting at the end of a month with 31 days, when calculating a period during a shorter month, the end of the shorter month will be the period end."}),"\n",(0,r.jsx)(n.h3,{id:"example-request",children:"Example Request"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "uid": "<your_agreement_uid>",\n  "purpose": "loan",\n  "description": "Monthly subscription for premium plan",\n  "debtor": {\n    "party_name": "John Doe",\n    "account_identifier": {\n      "type": "bban",\n      "value": "123456-78901234"\n    }\n  },\n  "payment_terms": {\n    "type": "fixed",\n    "frequency": "monthly",\n    "amount": 5000,\n    "first_payment_date": "2025-07-01",\n    "last_payment_date": "2026-06-01"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"successful-response",children:"Successful Response"}),"\n",(0,r.jsx)(n.p,{children:"Returns a JSON object containing the unique ID of the created agreement and its initial status."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "uid": "<your_agreement_uid>",\n    "state": "pending",\n    "created_at": "2025-07-02T19:29:39+10:00",\n    "purpose": "loan",\n    "payment_terms": {\n      "type": "fixed",\n      "frequency": "monthly",\n      "count": 1,\n      "max_amount": null,\n      "amount": 5000,\n      "first_payment_date": "2025-08-01",\n      "last_payment_date": "2026-06-01"\n    },\n    "debtor": {\n      "party_name": "John Doe",\n      "ultimate_party_name": "John Doe",\n      "account_identifier": {\n        "type": "bban",\n        "value": "123456-78901234"\n      }\n    },\n    "creditor": {\n      "party_name": "The name of the creditor party for this agreement.",\n      "ultimate_party_name": "The name of the creditor party for this agreement.",\n      "account_identifier": {\n        "type": "bban",\n        "value": "123456-98765432"\n      }\n    },\n    "initiator": {\n      "name": "initiator name",\n      "legal_name": "initiator legal_name",\n      "abn": "56192755287"\n    },\n    "description": "Monthly subscription for premium plan",\n    "validity_start_date": "2025-07-02",\n    "validity_end_date": null,\n    "state_caused_by": "initiator",\n    "links": {\n      "self": "/payto/agreements/<your_agreement_uid>"\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"agreement-status-lifecycle",children:"Agreement Status Lifecycle"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Status"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Pending"})}),(0,r.jsx)(n.td,{children:"Agreement has been created but is not yet active."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Created"})}),(0,r.jsx)(n.td,{children:"Agreement was created successfully and awaits debtor authorization."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Active"})}),(0,r.jsx)(n.td,{children:"The Debtor has accepted the terms of the Agreement."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Declined"})}),(0,r.jsx)(n.td,{children:"The Debtor has declined the terms of the Agreement."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Expired"})}),(0,r.jsx)(n.td,{children:"The Debtor has ignored the Agreement for 5 days (expires on day 6)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Cancelled"})}),(0,r.jsx)(n.td,{children:"The Agreement has been cancelled."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Suspended"})}),(0,r.jsx)(n.td,{children:"Agreement is temporarily suspended and cannot be used."})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["Note: ",(0,r.jsx)(n.code,{children:"declined"}),", ",(0,r.jsx)(n.code,{children:"expired"}),", and ",(0,r.jsx)(n.code,{children:"cancelled"})," are terminal states and cannot be reactivated."]})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"webhook-events",children:"Webhook Events"}),"\n",(0,r.jsx)(n.p,{children:"Once the agreement is created, the following webhook events may be triggered:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"payto_agreement.activated"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"payto_agreement.declined"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"payto_agreement.expired"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"payto_agreement.failed"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Each event includes the agreement details and updated status."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"try-it",children:"Try It"}),"\n",(0,r.jsx)(n.p,{children:"You can test this endpoint using the following cURL command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl --request POST \\\n  --url \'https://api-sandbox.oligo.com.au/v1/payto/agreements\' \\\n  --header \'accept: application/json\' \\\n  --header \'authorization: Bearer <your_token>\' \\\n  --header \'content-type: application/json\' \\\n  --data \'{\n    "uid": "<your_agreement_uid>",\n    "purpose": "loan",\n    "description": "Monthly subscription for premium plan",\n    "debtor": {\n      "party_name": "John Doe",\n      "account_identifier": {\n        "type": "bban",\n        "value": "123456-78901234"\n      }\n    },\n    "payment_terms": {\n      "type": "fixed",\n      "frequency": "monthly",\n      "amount": 5000,\n      "first_payment_date": "2026-07-01",\n      "last_payment_date": "2027-06-01"\n    }\n  }\'\n'})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>s});var i=t(6540);const r={},a=i.createContext(r);function d(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);